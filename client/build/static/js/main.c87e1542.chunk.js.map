{"version":3,"sources":["utils/auth.js","utils/mutations.js","pages/SearchBooks.js","utils/localStorage.js","utils/API.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","err","getItem","idToken","setItem","window","location","assign","LOGIN_USER","gql","CREATE_USER","SAVE_BOOK","i","SearchBooks","useState","searchedBooks","setSearchedBooks","searchInput","setSearchInput","JSON","parse","savedBookIds","setSavedBookIds","useEffect","bookIdArr","length","stringify","handleFormSubmit","event","preventDefault","fetch","response","ok","Error","json","items","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","error","useMutation","createBookSave","handleSaveBook","variables","bookToSave","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","key","border","Img","src","alt","Body","Title","Text","Auth","loggedIn","disabled","some","savedBookId","onClick","message","SignupForm","username","email","password","userFormData","setUserFormData","createUser","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","data","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","Modal","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c87e1542.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        localStorage.removeItem('id_token');\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SAVE_BOOK = gql`\r\n  mutation saveBook($bookId: String!) {\r\n    saveBooks(bookId: $bookId) {\r\n      _id\r\n      description\r\n      bookId\r\n      image\r\n      link\r\n      title\r\n      Author {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Delete_Book = gql`\r\n  mutation deleteBook($bookId: String!) {\r\n    deleteBook(bookId: $bookId) {\r\n     _id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { SAVE_BOOK } from '../utils/mutations';\r\nimport {searchGoogleBooks } from '../utils/API';\r\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nconst SearchBooks = () => {\r\n\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchGoogleBooks(searchInput);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || ['No author to display'],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\nconst [createBookSave, {error}] = useMutation(SAVE_BOOK); \r\n  const handleSaveBook = async (bookId) => {\r\n    try {\r\n      const bookToSave = await createBookSave({\r\n        variables: {bookId:bookId}\r\n      });\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    }catch (err) {\r\n      console.error(err);\r\n    }\r\n      \r\n   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a book'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : 'Search for a book to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n        {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","export const getSavedBookIds = () => {\r\n  const savedBookIds = localStorage.getItem('saved_books')\r\n    ? JSON.parse(localStorage.getItem('saved_books'))\r\n    : [];\r\n\r\n  return savedBookIds;\r\n};\r\n\r\nexport const saveBookIds = (bookIdArr) => {\r\n  if (bookIdArr.length) {\r\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\r\n  } else {\r\n    localStorage.removeItem('saved_books');\r\n  }\r\n};\r\n\r\nexport const removeBookId = (bookId) => {\r\n  const savedBookIds = localStorage.getItem('saved_books')\r\n    ? JSON.parse(localStorage.getItem('saved_books'))\r\n    : null;\r\n\r\n  if (!savedBookIds) {\r\n    return false;\r\n  }\r\n\r\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\r\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\r\n\r\n  return true;\r\n};\r\n","// make a search to google books api\r\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\r\nexport const searchGoogleBooks = (query) => {\r\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport {  CREATE_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  const [createUser] = useMutation(CREATE_USER);\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const {data}  = await createUser({\r\n        variables: {...userFormData}});\r\n\r\n      Auth.login(data.createUser.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n\tconst [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n\tconst [validated] = useState(false);\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [login] = useMutation(LOGIN_USER);\r\n\r\n\tconst handleInputChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetUserFormData({ ...userFormData, [name]: value });\r\n\t};\r\n\r\n\tconst handleFormSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// check if form has everything (as per react-bootstrap docs)\r\n\t\tconst form = event.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await login({\r\n\t\t\t\tvariables: { ...userFormData },\r\n\t\t\t});\r\n\r\n\t\t\tAuth.login(data.login.token);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\tsetShowAlert(true);\r\n\t\t}\r\n\r\n\t\tsetUserFormData({\r\n\t\t\tusername: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n\t\t\t\t<Alert\r\n\t\t\t\t\tdismissible\r\n\t\t\t\t\tonClose={() => setShowAlert(false)}\r\n\t\t\t\t\tshow={showAlert}\r\n\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSomething went wrong with your login credentials!\r\n\t\t\t\t</Alert>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"email\">Email</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Your email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\tvalue={userFormData.email}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\tEmail is required!\r\n\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"password\">Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Your password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\tvalue={userFormData.password}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\tPassword is required!\r\n\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tdisabled={!(userFormData.email && userFormData.password)}\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            Google Books Search\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link>\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to='/saved'>\r\n                    See Your Books\r\n                  </Nav.Link>\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport {\r\n\tApolloClient,\r\n\tInMemoryCache,\r\n\tApolloProvider,\r\n\tcreateHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport SearchBooks from './pages/SearchBooks';\r\n// import SavedBooks from './pages/SavedBooks';\r\nimport Navbar from './components/Navbar';\r\n\r\nconst httpLink = createHttpLink({\r\n\turi: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n\tconst token = localStorage.getItem('id_token');\r\n\treturn {\r\n\t\theaders: {\r\n\t\t\t...headers,\r\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\r\n\t\t},\r\n\t};\r\n});\r\n\r\nconst client = new ApolloClient({\r\n\tlink: authLink.concat(httpLink),\r\n\tcache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<ApolloProvider client={client}>\r\n\t\t\t<Router>\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={SearchBooks} />\r\n\t\t\t\t\t\t{/* <Route exact path=\"/saved\" component={SavedBooks} /> */}\r\n\t\t\t\t\t\t<Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</>\r\n\t\t\t</Router>\r\n\t\t</ApolloProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}